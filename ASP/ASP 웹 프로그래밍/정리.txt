[웹서버 종류]

웹서버 / 월드 와이드 웹(WWW) / 홈페이지 보관 , 브라우저 주문 응답

POP 서버 / Post Office Protocol / 전자송수신 당담, 메일 전달

SMTP 서버  / Simple Mail Transfer Protocol / 전자우편을 받아서 상대방의 SMTP 서버로 보냄. 서버간의 메일 전송

DNS 서버 / Domain Name Server / 도메인 네임 관리 유지

프록시 서버 / Proxy / 특정조직의 랜과 외부 네트워크 사이에서 방화벽 역할을 수행하며
		      , 동시에 여러 외부 서버의 데이터를 대신 받아주는 역할 수행

Telnet / Telnet / 원격 시스템 접속 지원

FTP 서버 / File Transfer Protocol / 파일 송수신 지원


[서비스와 사용하는 프로그램의 예]


서비스 /  클라이언트 프로그램 / 서버 프로그램

WWW /  웹브라우저(Navigetor , Explorer) / Apache , PWS, IIS

telnet / telnet , Netterm , 이야기 / telnet demon

FTP / ftp , WS_FTP / FTP demon

mail /mail, elm , outlook , Express , Messenger / Send Mail




[World Wide Web 게시 서비스(WWW 서비스) 하위 구성요소]


1. Active Server Pages : 서버에서 ASP를 사용하려면 이 옵션을 선택한다. 
 이 옵션을 선택하지 않으면 모든 .asp 요청에 대해 404 오류를 반환합니다.

2. Internet Data Connector : 서버에서 internet Data Connector를 사용하려면 이 옵션을 선택한다.
 이 옵션을 선택하지 않으면 모든 .idc 요청에 대해 404 오류를 반환한다.

3. 원격 관리(HTML) : 인트라넷 웹 브라우저에서 IIS 웹 서버의 원격 웹 관리를 사용하려면
  이 옵션을 선택한다. IIS를 설치하고 IIS 관리자를 통해 웹 사이트를 보면 IIS에서 Administration 라는 사이트를 만든다.


4. 원격 데스크톱 웹 연결 : 원격 위치에서 컴퓨터의 데스크톱에 연결하고 콘솔에서처럼 응용 프로그램을 실행하려면 이 옵션을 선택한다.

5. Server Side Includes : 서버의 Serve-Side2 Include 파일을 사용하려면 이 옵션을 선택한다.
이 옵션을 선택하지 않으면 모든 .shtm , .shtml 및 .stm  요청에 대해 404 오류를 반환한다.


6. WebDAV Publishing : 서버에서 WebDAV(Web Distributed Authoring and Versioning)를 사용하려면
 이 옵션을 선택한다. WebDAV를 사용할 경우 모든 WebDAV 클라이언트에서 HTTP를 사용하여 
 WebDAV 디렉터리의 콘텐트를 게시하고 변경할 수 있다는 점을 제외하면 WebDAV는 FTP와 비슷하다.

7. World Wide Web 서비스 : World Wide Web 서비스를 설치하려면 이 옵션을 선택한다.
  이 옵션을 선택하지 않으면 서버에서 IIS가 실행되지 않는다.


[SSL(Secure Sockets Layer)란?]

TCP/IP 연결을 통해서 프라이버시와 인증, 메시지 무결성 등을 제공하는 프로토콜로 방화벽을 통해 통신을 강화하고,
웹서버의 원격관리에 대해 보안을 제공 해주는 역할을 하게 된다. 이것을 이용하면 클라이언트와 서버는 침입, 변경, 위조의
가능성없이 통신이 가능하기 떄문에 사용자의 정보를 안전하게 암호화하여 전송하게 된다.



[HTTP 헤더]

HTTP 헤더의 내용 만료시기, 사용자 정의 헤더, 내용의 등급 등을 설정할 때 이용 된다. 예를 들어 "컨텐츠 만료 지정" 을 선택하여
지정해 주면 서버와 클라이언트 사이의 보조적인 정보를 주고 받는 HTTP 헤더의 내용에 대한 날짜를 지정하여 보관, 삭제할 수 있게 되는데,
기본적으로는 설정이 안되어 있다. 다음으로 MIME 매핑은 클라이언트에게 데이터를 보내는 경우 
그 데이터의 종류가 어떤 것인지를 알려주는 정보의 지도로, 이러한 정보가 있으면 클라이언트의 브라우저는 이러한 
데이터를 어떻게 처리할 것인지를 쉽게 파익하여 속도를 빠르게 할 수 있게 된다.



[사용자정의 오류]

이 페이지는 브라우저에서 만나게 되는 수많은 에러 메시지가 어떻게 존재하고, 어떻게 구성되어 있는지를 지정하고 있는데,
페이지를 조작하여 클라이언트에게 보내는 에러메시지를 조작할 수도 있다. 예를 들어, 우리가 자주 만나는 에러 메시지는 존재하지 않는 html 문서를
요청하는 경우 이러한 페이지를 만나게 된다.

404라는 에러코드가 발생하면 사용자 정의 오류 창에 매칭된 404b.htm 페이지를 찾아서 클라이언트에게 되돌려 주고 있는 것이다.
그럼으로 우리는 위에서 정보를 참고하여 ,편집하면 다른 페이지가 열리게 된다.








[ISAPI 필터]

애플리케이션의 일종인 ISAPI를 제작한 경우 그 ISAPI 필터를 설치하는 공간이다.
ISAPI로 제작된 DLL은 이곳에서 설치되고 구성해서 서버의 메모리에 탑재되어 
클라이언트의 요청에 응답하게 된다.ISAPI에 관심이 있는 사람들은 
Visual C++ 관련 전문서적 등에서 그 제작 관련 전문 서적 등에서 그 제작 방법을 공부할 수 있다.


[ISAPI(Internet Server Application Programming Interface)]

기존의 CGI 단점을 극복하기 위해서 등장하였으며, 기존의 CGI가 실행파일 형식으로 
클라이언트의 요구때 마다 각각의 프로세스를 만들어 주었지만, 이 ISAPI는 단 하나의 프로세스를
모든 사용자가 함께 공유하여 서버의 성능을 향상시켜주고 있다. ISAPI는 익스텐션과 필터라는 두 종류로 제작될 수 있다.
이 ISAPI는 ASP와 마찬가지로 DLL로 제작되어 서버에 한번 로딩 되면 계속하여 클라이언트의 요청에
응답하게 된다. 일단 메모리에 탑재되면 계속하여 클라이언트의 요청을 처리하여 그 기능이 상당히 탁월하다.



[Perl (Practical Extraction and Report Lenguage)]

스트립트 언어로 운영체제의 종류에 관계없이 동작하며, 한번 작성된 소스는 모든 시스템에서
동일하게 작동한다. 각종 DB연동 프로그램에 필요한 라이브러리를 제공하고 있으며,
스크립트 언어이므로 컴파일 언어에 비하여 수행 속도가 떨어지며 , 프로그램 언어 자체는 무료로
구할 수 있다.  원도우즈 NT용의 경우 운영체제에 최적화된 Active Perl을 MS지원으로 
개발이 되어 현재 무료로 배포되고 있으며, 아파치를 웹서버로 사용할 경우 Perl 모듈을 사용하면
효율적인 실행 효과를 얻을 수 있다.


[PHP (Personal Home Page)]

PHP는 말 그대로 개인용 홈페이지 개발을 위하여 만들어진 언어였으나, 현재는 기능이 많이
보강되어 기업용 프로그램 개발에도 많이 사용되고 있다. PHP는 UNIX와 NT에서 모두 수행이 가능하며,
특히 UNIX에서 아파치 웹서버 PHP 모듈을 사용할 경우, 아주 빠른 수행 속도를 보여준다. 
그러나 DB연결 기능의 제공이 되어야 하는 단점이 있다. 
현재 나와 있는 대부분의 사용 DB는 바로 사용이 가능하나, 일부 DB의 경우 불가능한 경우도 있다.


[JAVA]

자바는 미국 썬마이크로시스템사에서 개발한 언어로 컴파일 방식과 스크립트 언어의 중간 방식이다.
소스를 컴파일하여 나온 프로그램은 단독으로 실행이 불가능하여 따로 해석기(Interpreter)를 통하여
프로그램을 실행하여야 한다. 현재 외국에서 점차 사용이 증가하고 있는 경향이 있으며,
대규모 사이트 개발에서 미들웨어 연동 등에 많이 이용되고 있다. 웹사이트 개발시 JAVA는 일반적인 방식보다는
Applet과 Java Servlet을 사용하여 개발한다. Applet은 클라이언트/서버 방식의 프로그램 개발이 가능하며
브라우저에서 실행되는 프로그램이다. Sevelet은 CGI의 한 형태로 수행속도가 일반 CGI 보다 더 빠르고
안정적인 것으로 나타나고 있다. JAVA는 운영체제의 종류에 관계없이 구현이 가능하다.


[C/C++]

대부분의 운영체제에서 사용이 가능하며, 다른 언어와 비교하여 수행속도가 빠르다. 각종 DB에서
C/C++ 용 라이브러리를 제공하고 있으므로 CGI 개발이 용이하다. UNIX에서 작성된 소스를 
원도우즈 NT에서는 바로 사용할 수 없는 경우가 많이 있다.


[ASP(Active Server Page)]

일종의 스크립트 언어로 MS사에서 제작되었다. ASP 프로그램이 작동되기 위해서는 원도우즈 NT 또는 
원도우즈 2000 기반의 IIS 서버 4.0 이상 운영체제가 필요하다. ASP는 운영체제에 특성화 되어 있기 떄문에 다른
스크립트 언어에 비하여 수행속도가 빠르며, DB에 접속하여 처리하는 프로그램 작성에도 용이하다.



[ASP 와 CGI 개발 언어]

ASP (Active Server Pages)는 1995년 말에 등장한 IIS(Internet Information Server)의 세 번째
버전으로 Windows NT 기반의 IIS 3.0 이상 에서만 동작하는 일종의 스크립트 언어이다. 즉, ASP 코드는 
자바스크립트 또는 VB 스크립트와 마찬가지로 HTML 문서 내에 스크립트를 삽입하여 동적인 웹 페이지를
구성한다. 스크립트 언어는 서버-사이드(Server-Side)와 클라이언트-사이드(Client-Side) 두 가지로 분류할 수 있다.
ASP 스크립트를 포함하느 웹문서를 클라이언트가 요청하면, 서버는 ASP.DLL을 통하여 스트립트를 처리한 후 넘겨주는 경우가
서버-사이드 스크립트이다. 그러나 자바 또는 VB 스크립트를 포함하는 웹 문서를 요청하면 웹 서버는 해당 웹 페이지를 바로 
클라이언트에 전송하며, 부라우저가 이를 받아 스크립트 코드를 해석하여 화면에 내용을 나타내게 된다. 이런 종류의 
스크립트를 클라이언트-사이드 스크립트라고 한다.


[ASP의 장점]

1. ASP는 서버-사이드 스크립트 언어로 브라우저와 서버가 상호 교신할 필요성을 줄여 주어
   실제 클라이언트에서 페이지를 로딩 하는 시간이 줄어들게 된다.

2. ASP로 작성된 문서는 서버가 HTML 형식으로 바꾼 웹 페이지를 전송하기 떄문에 브라우저와
   무관하게 수행된다.

3. 웹서버는 HTML로 변환된 문서를 전달하기 때문에 사용자는 웹브라우저에서 ASP소스 코드를
   볼 수 없어 보안성이 증대된다.

4. ASP가 작동하기 위한 환경은 Windows NT 또는 Windows 2000에서 제공하는 IIS 웹 서비스
   소프트웨어만 있으면 된다. 또한 ASP를 이용하여 응용 프로그램을 개발하는 환경만으로
   사용하려면 Windows 9x 시스템의 PWS 웹서비 소프트웨어로 충분하다.

5. ASP는 DLL에 의해서 해석되기 떄문에 사용자의 서비스 요청에 따라 독립적인 프로세스를
   생성하지 않는다. 그리고 스레드를 이용해 응답하기 때문에 CGI 방식보다 ASP가 웹서버에 주는
   부담이 상대적으로 적다.

6. ASP는 VB스크립트를 근간으로 만들어졌기 때문에 VB 프로그래밍에 익숙한 개발자는 쉽게 이용할 수 있다.


[ASP 단점]

1.클라이언트가 웹문서의 ASP 소스를 보기가 힘들다는 것은 장점이자 단점이다.

2. HTML 문자에 삽입하여 사용하기 떄문에 코딩시 줄 맞추기를 하지 않으면 
   개발 후에 문장을 이해하기 어렵다.

3. ASP는 스크립트 언어이므로 패키지로 판매가 어렵다. 예를 들어 C 언어로 작성된 CGI는
   소스 코드 없이도 실행 파일만 있으면 사용할 수 있으나, ASP는 완전 공개를 해야 사용이 가능하다.

























