Response 객체는 서버에서 처리된 결과 데이터 값들을 클라이언트로 전송할 때 사용하는 객체이다. 
그러므로 클라이언트에서 서버로 전송한 데이터를 관리하는 Request 객체와는 반대되는 개념을 가진다고 할 수 있다.



[컬렉션]

Cookies : 클라이언트에 전송할 쿠키 값과 속성을 지정

[속성]

Buffer : 페이지에 버퍼링할지를 지정

ContentType : HTTP 컨텐트 타입을 주정(MIME type)

Expires : 캐쉬된 페이지의 소멸 시간을 지정(분단위)

ExpiresAbsolute : 캐쉬된 페이지의 소멸 날짜와 시간 지정

IsClientConneccted :  사용자가 현재 서버와 접속되었는지 여부

Status :  서버에서 클라이언트로 돌려 줄 상태 값


[메소드]

AddHeader : HTML 헤드를 추가하거나 변경

AppendToLog : Request에 대해 서버 로그 파일에 텍스트를 기록

BinaryWrite : 텍스트를 브라우저에 Charecher-Set을 변환없이 전송

Clear : 버퍼링된 HTML 결과 내용을 지움

End : 버퍼링된 내용을 브라우저로 전송하고 처리를 종료

Flush : 버퍼링된 HTML 결과 내용을 보냄

Redirect : 요청을 다른 URL로 유도

Write : 페이지에 문자열을 출력




[페이지의 출력 제어]

페이지에 정보의 출력을 제어하기 위한 속성과 Buffer , Flush , Clear , End 메소드


[Buffer 속성]

Buffer는 페이지를 버퍼링할 것인지 여부를 지정해 주는 속성이다. 페이지 버퍼링이란 생성한
페이지의 내용을 바로 클라이언트에게 전송해 주는 것이 아니라, 서버에 일단 저장(버퍼링)하는 것을 말한다.
즉, 출력 내용에 버퍼링이 지정되면 , 서버는 서버 스크립트가 모두 처리될 때까지 출력 내용을 클라이언트로 전송하지 않는다.
서버가 클라이언트로 내용을 전송한 후에는 Buffer 속성을 설정할 수 없으므로 Buffer 속성은 다음과 같이
ASP 프로그램의 맨 앞에 기술한다.

<% Response.Buffer = True %>

Buffer의 속성을 True로 지정하면 출력 내용이 버퍼링되며 , False로 지정하면 출력 내용이 즉시 클라이언트로 전송된다.
Buffer를 True로 지정해야만 Flush 메소드(현재의 버퍼의 내용을 클라이언트에 출력) , Clear 메소드 ( 현재의 버퍼의 내용을 삭제)
,그리고 End 메소드 (현재의 버퍼의 내용을 클라이언트로 전송한 후에 페이지를 종료)를 사용하여 페이지 버퍼링을 제어
할 수 있다.


[Flush 메소드]

Flush는 현재의 버퍼에 저장되어 있는 내용을 클라리언트로 출력시켜 주는 메소드이다.
예를 들어, 출력하는 도중에 어떤 처리를 해야 하는 경우에 지금까지 버퍼에 쌓인 내용을 Flush 메소드를 사용하여 사용자에게 일단
일부의 정보라도 보여 줄 수 있다. "Response.Buffer = True"를 설정하여 출력 내용에 버퍼링을 지정한 후,
Flush 메소드를 호출하지 않더라도 해당 스크립트가 종료될 때 버퍼의 모든 내용이 클라이언트로 전송된다.
그러므로 ASP 프로그램이 정상적으로 처리되고 있다면 <% Response.Flush %> 문장을 생략하더라도 결과는 동일하게 된다.
즉 , Flush 메소드를 만나거나 스크립트가 종료되면 웹페이지의 내용이 모두 출력되기 때문이다.

[Clear 메소드]

Clear는 현재의 버퍼의 내용을 삭제하는 메소드이다. 웹페이지가 모두 출력되기 전에 버퍼의 내용을 삭제하려면 <% Response.Clear %>
을 기술하면 된다.

[End 메소드]

End는 현재 법퍼의 내용을 클라이언트로 전송한 후에 해당 스크립트 페이지를 종료시키는 메소드이다.
다음과 같이 연속적으로 사용하면 해당 페이지의 결과를 클라이언트로 전송하지 않고 바로 종료시키게 된다.

<% 
    Response.Clear
    Response.End

%>



[Cookies 컬렉션]

쿠키는 Request 객체와 Response 객체 모두에 있는 컬렉션 이다. 쿠키 컬렉션은 Request 객체에서 설명한 것과 같이,
서버가 클라이언트 브라우저에 저장해 두는 소규모의 파일이며, 클라이언트의 브라우저가 특정 페이지를
요청할 때 쿠키를 서버로 전송해주면 이 정보를 이용하여 사용자를 식별해 내는 과정을 생략할 수 있는 등의 용도로 사용된다.
또한 페이지 간 또는 세션간의 데이터 전달을 위해 쿠키를 이용한다.
통상적으로 쿠키에는 사용자의 개인적인 정보를 저장해 둔다.


1) 쿠키 설정

Response.Cookies("변수") = 값


2) 쿠키의 유효 기간 설정

Response.Cookies("변수").Expires = "날짜형 데이터"


3) 쿠키 읽기

Request.Cookies("변수")


4) 쿠키의 존재 여부

Request.Cookies("변수").Haskeys
반환은 Boolean






  
