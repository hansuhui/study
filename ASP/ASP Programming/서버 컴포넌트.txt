Request, Response , Application , Session , Server 객체와 스크립트 객체 등의 표준적인
객체가 제공하는 기능을 이용하여 원하는 어플리케이션을 구현해 내는 것 외에도 사용자가
직접 제작하거나 타인이 제작하여 배포하는 컴포넌트를 이용하여 VBScript가 제공하지 못하는
각종 기능을 구현할 수 있다.

[서버 컴포넌트의 이용 방법]

서버 객체와는 달리 서버 컴포넌트는 자신만의 DLL을 가지므로 이를 서버에 설치하고
등록해 주는 과정이 필요하다.

1. 해당 DLL 파일을 구하여 "Windows/system32/inetsrv/" 폴더에 복사한다.
   예를 들어 , AdRotator 컴포넌트는 AdRot.dll 파일을 Content Linking 컴포넌트는
   Nextlink.dll 이라고 하는 파일을 등록하여야 한다.

 

2.실행참을 열고 Regsvr32 명령을 사용하여 해당 dll을 등록해준다
 실행창 열고 - regsvr32.exe dll 경로


3. 등록 작업이 성공적으로 이루어지면 다음과 같은 메시지가 출력된다. 
이 메시지는 원오우즈 레지스트리에 컴포넌트 정보가 이상 없이 등록되었다는 뜻이며,
이것으로 컴포넌트 설치가 완료된 것이다.

4. 등록된 컴포넌트를 제거할 때에느ㄴ다음와 같이 "/u" 옵션을 사용한다
 실행창 열고 - regsvr32.exe /u dll 경로



[서버 컴포넌트의 인스턴스 생성]

다음은 MS사의 원도우즈 컴포넌트(MSWC)인 서버컴포넌트의 인스턴스를 생성하는 일반 형식이다.

Set 객체인스턴스명 = Server.CreateObject("MSWC.컴포넌트객체명")

다음은 Content Linling 컴포넌트의 인스턴스를 생성하는 예이다.

Set objNext = Server.CreateObject("MSWC.NextLink")

객체 인스턴스를 생성하는 방법에는 CreateObject 메소드를 이용하는 방법 외에도
<Object> 태그를 이용하는 방법이 있다.


[서버 컴포넌트의 종류]

[AdRotator]

AdRotator 컴포넌트는 제한된 공간의 ASP 페이지에서 보다 효과적으로 배너 광고들을
넣기 위해 사용하는 서버 컴포넌트로 지정한 시간 비율에 따라 각 사이트를 나타내는 이미지
파일을 번갈아 출력하며, 각 이미지를 클릭하면 해당 사이트로 하이터링크가 되도록
하는 컴포넌트이다. AdRotator 컴포넌트는 AdRot.dll로 구현되어 있다.

AdRotator 컴포넌트를 실제로 사용하기 위해서는 적어도 다음과 같은 2개의 파일을 작성하여야 된다.

-AdRotator 객체의 인스턴스를 생성하고, 하이퍼링크되는 사이트를 호출하는 ASP 파일

- 광고 사이트 정보를 관리하는 스케줄 파일(텍스트파일.txt)

AdRotator 컴포넌트의 객체 인스턴스는 CreateObject 메소드를 사용하여 다음과 
같이 생성한다. 여기서는 objAd로 한다

Ser objAd = Server.CreateObject("MSWC.AdRotator") 

-컴포넌트의 메소드와 속성-

[메소드]

GetAdvertisenebt : 스케줄 파일로부터 광고에 대한 정보를 얻고 HTML 코드를 반환

[속성]

Border : 광고 이미지의 경계 두께

Clickable : 광고가 하이퍼링크인지 여부(default 값 : true)

TargetFrame : 광고를 보여줄 프레임 이름



GetAdvertisement 메소드는 스케줄 파일을 지정하여 광고에 대한 정보를 획득하는
역할을 한다. 다음은 스케줄 파일(AdText.txt)로 부터 광고에 대한 정보를 얻어
변수 varAd에 저장한 후, 클라이언트의 브라우저로 출력하는 예이다.

Set objAd = Server.CreateObject("MSWC.AdRotator")
varAd = objAd.GetAdvertisement("AdText.txt")
Response.Write varAd


스케줄 파일은 광고할 사이트의 정보를 관리하는 텍스트 파일이다. 이 파일에 필요한
광고를 추가하거나 삭제하면 웹페이지를 별도 수정하지 않고 새로운 광고를 할 수 있다.

스크줄 파일의 구성은 *를 기준으로 2가지 영역으로 구분된다 . * 표시의 상단은
광고에 대한 옵션을 지정하고 , 하단은 광고에 대한 정보를 정의한다.


[Text 파일 설정]

Redirect 	'Redirection을 구현한 경로와 프로그램
width	 	'이미지의 넓이(픽셀 단위) - 기본 440 픽셀
Height		'이미지의 높이(픽셀 단위) - 기본 60 픽셀
border 		'이미지의 경계 두께 - 기본 1
*
이미지 URL	'가상 디렉토리와 이미지 경로
홈 URL 		'해당 광고의 홈페이지, (-)은 링크가 없음을 의미
설명문 		'이미지의 텍스트 설명
빈도수		'상대적인 출력 빈도 수(비율)


[예제]


<%
	set objAd = Server.CreateObject("MSWC.AdRotator")
	objAd.Border=1
	objAd.Clickable = true
	objAd.TargetFrame = "Target='_blank'"
%>

<body>
<%
 varAd = objAd.GetAdvertisement("adType.txt")
 Response.Write varAd
%>
</body>


adText.txt 파일은 이러하다

Redirect 연결 경로
width 150
Height 50
border 0
*

yahoo.gif
http://kr.yahoo.com
야후 코리아
20


altavista.gif
http://www.altavista.co.kr
한글 알타비스타
20

empas.gif
http://www.empas.com
엠파스
60


===============================================================================

[SiteGalaxyUpload 컴포넌트]

1.필요성

파일업로드 관련 컴포넌트는 많이 있다. 어떤 것들은 비용을 지불하고 구입해야 하는 것도 있으며,
어떤 것은 무료로 기능에 제한 없이 이용할 수 있는 것도 있다.
여기서는 인터넷상에서 무료로 구할 수 있는 SiteGalaxyUpload에 대하여 설명한다.
이 컴포넌트는 ASP 기반의 자료실을 제작하는 데도 사용될 수 있다.

FileSystemObject 객체나 ADODB 객체 등을 통해서 파일 업로드를 하는 프로그램을
직접 구현하기는 쉽지 않다. 왜냐하면, 파일을 서버에 보내기 위해서는 FORM 태그에서
ENCTYPE = "multipart/form-data" 라는 속성을 넣어 주어야 하는데, 이렇게 되면
ASP 에서 Request.Form 객체를 사용하지 못하게 된다.
결국, 파일을 업로드하기 위해서는 파일도 받아들일 수 있고 , 입력 양식 데이터도
동시에 받아들을 수 있는 기능을 가진 별도의 컴포넌트를 이용해야 한다.
파일 업로드를 구현해 주는 컴포넌트는 여러 가지가 있지만, 그 중에서 사용하기 쉬운
SiteGalaxyUpload라는 컴포넌트를 이용해 파일을 서버에 업로드해 보자

2. 설치
우선 인터넷상에서 파일 SiteGalaxyUpload.zip을 다운로드 받고 압축을 풀면
SiteGalaxyUpload.dll이 나타날 것이다. 그 다음 SiteGalaxyUpload 컴포넌트를 설치해야
하는데, 설치는 서버 컴포넌트을 해야 한다.

3. 객체(인스턴스) 생성하기

SiteGalaxyUpload 컴포넌트의 객체 인스턴스는 다음과 같이 생성한다.
UploadForm은 임의로 지정한 객체 이름이다.

Set UploadForm = Server.CreatrObject("SiteGalaxyUpload.Form")


4. 간단한 파일 업로드 페이지 제작

<%
   Set uploadForm = Server.CreateObject("SiteGalaxyUpload.Form")
   Set fsp = Server.CreateObject("Scripting.FileSystemObject")

   uploadForm("FILE1".SaveAs("c:\temp\"& fso.GetFileName(uploadForm("FILE1").FilePath))
   Response.Write("File Upload Success!")
%>


- FilePath는 SiteGalaxyUpload의 속성으로서, 업로드된 파일의 전체 경로(Client 경로)를
  의미하며 경로의 데이터 타입은 String이다. 이 속성을 다음의 구문과 같이 사용하면 된다.

  Set UploadForm = Server.CreateObject("SiteGalaxyUpload.Form")
  UploadForm("FILE1"),FilePath


이 예에서 UploadForm("FILE1").FilePath는 클라이언트로부터 전송되어 온 값이
저장된 FILE1의 파일 경로를 의미이다.


- SaveAs는 업로드한 파일의 이름을 변경하여 저장하는 SiteGalaxyUpload의
  메소드이다. SaveAs의 일반형식은 다음과 같다

  object.SaveAs(AbsFullPath,[Boolean])


SaveAs() 메소드는 , AbsFullPath 와 [Boolean]로 구성되며 , AbsFullPath는
서버상의 절대 파일 경로를 의미하고, Boolean은 서버 상에 해당 파일이 있는 경우
덮어 쓸 것인지를 여부를 지정한다


- GetFileName()는 FileSystemObject 객체의 메소드로서 , 지정된 파일경로로부터
  파일명만 추출하는 명령이다. FileSystemObject의 일반 형식은 다음과 같다

  Set object = Server.CreateObject("Scripting.FileSystemObject")
  object.GetFileName(TransFullPath)


GetFileName() 메소드를 사용하려면 스크립트의 FileSystemObject 객체로부터
인스턴스를 생성하고, 생성된 인스턴스(객체)를 이용하여 GetFileName() 메소드에
적용한다. 일반 형식에서 GetFileName(TransFullPath)의 TransFullPath에는
파일경로가 지정되지만, 여기서는 클라이언트로부터 전송되어 온 파일경로를 의미한다.
Object.GetFileName(TransFullPath)은 TransFullPath로 부터 순수한 파일명을 추출하라는 명령이다.


5. MapPath로 디렉토리를 지정하여 파일 업로드하기

서버 객체의 메소드인 MapPath를 이용하여 가상 디렉토리의 하위 디렉토리에 파일을 올릴 수 있다.


<%
  Set uploadForm = Server.CreateObject("SiteGalaxyUpload.Form")
  Set fso = Server.CreateObject("Scripting.FileSystemObject")

  strDir = Server.MapPath("./upload_data")
  uploadForm("FILE1").SaveAs(strDir &"\"& fso.GetFileName(uploadForm("FILE1").FilePath))
  Response.Write("File Upload Success!")
%>


===============================================================================

[Content Linking 컴포넌트]

하나의 웹사이트는 많은 웹 페이지들로 구성되고 서로 관련을 맺고 연결되어 있다.
Content Linking 컴포넌트는 사용자들에게 이러한 페이지들을 정리된 리스트 형태로
제공하고자 할 때 사용된다. 새로 삽입되는 페이지나 삭제되는 페이지가 페이지가 
빈번할 때 , HTML 문서를 직접 수정하지 않고 Linker List 파일(텍스트 파일)을 열어
수정작업을 하면 되기 때문에 웹 페이지 관리 측면에서 매우 유용하게 사용할 수 있다,
Content Linking 컴포넌트는 NextLink.dll에 구현되어 있으며, 이것을 사용하기
위에서는 객체 인스턴스를 먼저 생성하고 해당 메소드를 적용한다.

Set objLnk  = Server.CreateObject("MSWC.NextLink")

-Content Linking 컴포넌트 메소드-

GetListCount(텍스트파일) : 텍스 파일에 있는 리스트 수

GetNthDescription(텍스트파일, 인덱스) : 파일에서 원하는 URL의 설명문

GetNthURL(텍스트파일, 인덱스) : 파일에서 원하는 URL

GetNextDescription(텍스트파일) : 파일에서 다음 페이지의 설명문

GetNextURL(텍스트파일) : 파일에서 다음 페이지의 URL

GetPreviousDescription(텍스트파일) : 파일에서 이즌 페이지의 설명문

GetPreviousURL(텍스트파일) : 파일에서 이전 페이지의 URL


Content Linking 컴포넌트를 다루는 ASP 프로그램에서 사용할 Linker List 파일(텍스트 파일)을
작성할 떄 유의할 점은 다음과 같다.

URL 과 URL 설명 사이에는 Tab키로 구분한다. 

[텍스트 파일 설정]

/asp/asp파일	설명문
/asp/asp파일	설명문
/asp/asp파일	설명문
사이는 탭키로 구분


[예제]
<% 
 Set objLnk = Server.CreateObject("MSWC.NextLink")
 contLNK = objLnk.GetListCount("txt파일")

  objLnk.GetNthURL("txt 파일",인텍스)
  objLnk.GetNthDescription("txt 파일",인텍스)
%>




======================================================================================


[ADO 컴포넌트]

ADO(ActiveX Data Objects)는 서버에 설정된 데이터베이스를 연결해 데이터를 저장하고
불러올 수 있도록 해주는 컴포넌트이다. 즉, 데이터베이스를 엑세스하여 데이터를 검색하고
추가하며 변경할 수 있도록 한다. ADO 컴포넌트 ODBC 드라이브를 이용해서 데이터베이스를 다룬다.

참고로 ODBC(Open DataBase Connection)은 SQL-Server , MS-Access , Oracle , Informix 등과
같이 DBMS가 다르더라도 데이터베이스에 접근하기 위한 표쥰 규약을 제공하는 역할을 한다.


[기타 컴포넌트]

그밖에 ASP에서 사용할 수 있는 컴포넌트로는 웹페이지 상의 HTML 내용의 문자열을 자동으로
회전시키는 Content Rotator 컴포넌트, 컴퓨터 파일 시스템 파일을 찾고 수정할 수 있는
File Access 컴포넌트, 서버와 접속한 브라우저에 대한 정보를 알려주는 
Browser Capabilities 컴포넌트 등이 있다.

set ClientBrowser = Server.CraeteObject("MSWC.BrowserType")
ClientBrowser.platform 'Client OS
ClientBrowser.browser  '웹 브라우저
ClientBrowser.version  '브라우저 버전
ClientBrowser.frames   '프레임 지원
ClientBrowser.tables   '테이블 지원
ClientBrowser.backgroundsound '사운드 지원
ClientBrowser.cookies  '쿠키 지원
ClientBrowser.vbscript 'VBScript 지원
ClientBrowser.javascript 'JavaScript 지원






